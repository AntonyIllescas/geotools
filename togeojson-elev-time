#!/usr/bin/perl

use POSIX;
use XML::Parser;

print "{\n\"type\": \"FeatureCollection\",\n\"features\": [\n";
$within = 0;

sub handle_start {
	my ($expat, $element, @tags) = @_;
	my %tags = @tags;

	if ($element eq "trkpt") {
		$lat = $tags{'lat'};
		$lon = $tags{'lon'};
	} elsif ($element eq "ele") {
		$state = "ele";
	} elsif ($element eq "time") {
		$state = "time";
	} else {
		$state = "";
	}
}

sub handle_char {
	my ($expat, $s) = @_;
	$s =~ s/\n//g;
	if ($state eq "ele") {
		$ele .= $s;
	}
	if ($state eq "time") {
		$time .= $s;
	}
}

sub handle_end {
	my ($expat, $element) = @_;

	if ($element eq "trkseg" || $element eq "trk") {
		if ($within > 0) {
			$within = -1;
			print " ] } }\n";
		}
	} elsif ($element eq "trkpt") {
		if ($lat ne "" && $lon ne "") {
			if ($within < 0) {
				print ",\n";
			}
			if ($within <= 0) {
				print "{ \"type\": \"Feature\", \"properties\": { }, \"geometry\": { \"type\": \"LineString\", \"coordinates\": [ ";
			} else {
				print ", ";
			}

			print "[ $lon, $lat";
			if ($ele ne "") {
				$ele =~ s/ *$//;
				print ", $ele";
			}
			if ($time ne "") {
				$time =~ s/^ *//;
				$time =~ s/ *$//;
				print ", { \"time\": \"$time\" }";
			}
			print " ]";
			$within = 1;
		}

		$ele = "";
		$time = "";
	}
}

if ($#ARGV < 0) {
	$parser = new XML::Parser(Handlers => { Start => \&handle_start,
						End   => \&handle_end,
						Char  => \&handle_char,
					      });

	$parser->parse(*STDIN);
} else {
	for $file (@ARGV) {
		$oldwhen = 0;
		print STDERR "$file\n";

		$parser = new XML::Parser(Handlers => { Start => \&handle_start,
							End   => \&handle_end,
							Char  => \&handle_char,
						      });

		$parser->parsefile($file);
	}
}

if ($within > 0) {
	print "] } }\n";
}

print "]\n";
print "}\n";
